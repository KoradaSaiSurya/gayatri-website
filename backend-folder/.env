EMAIL_USER=saisuryakorada2003@gmail.com 
EMAIL_PASS=yanqhbwfqyjalybs
MONGO_URI=mongodb+srv://surya:korada2003@cluster0.tvs6lrd.mongodb.net/school?retryWrites=true&w=majority
JWT_SECRET=supersecret123




# backend 

# model/user.js

# const mongoose = require("mongoose");

# const userSchema = new mongoose.Schema({
#   username: {           // ✅ spelling must be "username"
#     type: String,
#     required: true
#   },
#   email: {
#     type: String,
#     required: true,
#     unique: true
#   },
#   password: {
#     type: String,
#     required: true
#   }
# });

# module.exports = mongoose.model("User", userSchema);


# routes/authRoute

# const express = require("express");
# const bcrypt = require("bcryptjs");
# const jwt = require("jsonwebtoken");
# const User = require("../models/User");
# const router = express.Router();

# // Register
# router.post("/register", async (req, res) => {
#   const { username, email, password } = req.body;

#   if (!username || !email || !password) {
#     return res.status(400).json({ msg: "All fields required" });
#   }

#   const existingUser = await User.findOne({ email });
#   if (existingUser) return res.status(400).json({ msg: "Email already used" });

#   const hashedPassword = await bcrypt.hash(password, 10);
#   const newUser = new User({ username, email, password: hashedPassword });

#   await newUser.save();
#   res.status(201).json({ msg: "Registered Successfully" });
# });

# // 🔥 login route lo token create cheyyi
# // 🔐 Only allow fixed admin
# router.post("/login", async (req, res) => {
#   const { email, password } = req.body;

#   const adminEmail = "admin@gayathri.com";
#   const adminPassword = "admin123";

#   // Check email
#   if (email !== adminEmail) {
#     return res.status(401).json({ msg: "Only admin can login!" });
#   }

#   // Check password
#   if (password !== adminPassword) {
#     return res.status(401).json({ msg: "Invalid admin password" });
#   }

#   // Create token manually (no DB)
#   const token = jwt.sign({ email }, process.env.JWT_SECRET, { expiresIn: "1h" });

#   // Send token and admin info
#   res.json({
#     msg: "Admin login success",
#     token,
#     username: "admin",
#     email: adminEmail,
#   });
# });


# module.exports = router;


# server.js



# const express = require('express');
# const cors = require('cors');
# require('dotenv').config();
# const mongoose =require('mongoose')
# const authRoutes =require('./routes/authRoutes')

# const app = express();

# // ✅ CORS allowed origins
# const allowedOrigins = [
#   'http://localhost:3000',
#   'https://gayatri-website.vercel.app',
#   'https://gayatri-frontend.onrender.com',
#   'https://gayathri-website-tuni.vercel.app',
# ];


# // ✅ CORS Setup
# app.use(
#   cors({
#     origin: function (origin, callback) {
#       if (!origin || allowedOrigins.includes(origin)) {
#         callback(null, true);
#       } else {
#         callback(new Error('Not allowed by CORS'));
#       }
#     },
#     methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
#     credentials: true,
#   })
# );

# app.use(cors());
# app.use(express.json());



# app.use("/api/auth",authRoutes)

# mongoose
#   .connect(process.env.MONGO_URI)
#   .then(() => console.log('✅ Connected to MongoDB'))
#   .catch((err) => console.error('❌ MongoDB error:', err));


# // ✅ Sample test route
# app.get("/api/test", (req, res) => {
#   res.json({
#     message: 'API working successfully!',
#     yourID: req.params.id,
#   });
# });


# // ✅ Home route
# app.get('/', (req, res) => {
#   res.send('🚀 Gayatri Website Backend is Live!');
# });


# // ✅ Contact form
# app.post('/send-message', async (req, res) => {
#   const { name, email, message } = req.body;
#   try {
#     const transporter = nodemailer.createTransport({
#       service: 'gmail',
#       auth: {
#         user: process.env.EMAIL_USER,
#         pass: process.env.EMAIL_PASS,
#       },
#     });

#    const mailOptions = {
#   from: process.env.EMAIL_USER,
#   to: process.env.EMAIL_USER,
#   subject: `New Message from ${name}`,
#   html: `
#     <h2>New Message</h2>
#     <p><strong>Name:</strong> ${name}</p>
#     <p><strong>Email:</strong> ${email}</p>
#     <p><strong>Message:</strong> ${message}</p>
#   `,
# };


#     await transporter.sendMail(mailOptions);
#     res.json({ success: true, message: 'Message sent successfully!' });
#   } catch (err) {
#     console.error('❌ Contact form error:', err);
#     res.status(500).json({ success: false, message: 'Failed to send message.' });
#   }
# })




# // ✅ Admission form
# app.post('/admission-form', async (req, res) => {
#   const { studentName, parentName, className, phone, email, message } = req.body;
#   try {
#     const transporter = nodemailer.createTransport({
#       service: 'gmail',
#       auth: {
#         user: process.env.EMAIL_USER,
#         pass: process.env.EMAIL_PASS,
#       },
#     });


#     const mailOptions = {
#   from: process.env.EMAIL_USER,
#   to: process.env.EMAIL_USER,
#   subject: ` 🎓 New Admission Request from ${parentName}`,
#   html: `
#     <h2>📋 Admission Form</h2>
#         <p><strong>Student Name:</strong> ${studentName}</p>
#         <p><strong>Parent Name:</strong> ${parentName}</p>
#         <p><strong>Class:</strong> ${className}</p>
#         <p><strong>Phone:</strong> ${phone}</p>
#         <p><strong>Email:</strong> ${email}</p>
#         <p><strong>Message:</strong> ${message}</p>
#   `,
# };


#     await transporter.sendMail(mailOptions);
#     res.json({ success: true, message: 'Admission form submitted!' });
#   } catch (err) {
#     console.error('❌ Admission form error:', err);
#     res.status(500).json({ success: false, message: 'Failed to send admission form.' });
#   }
# });



  

# app.get('/', (req, res) => {
#   res.send('✅ Server is running');
# });

# // ✅ Invalid routes handler
# app.use((req, res) => {
#   res.status(404).json({ error: 'Route not found' });
# });

# const PORT = process.env.PORT || 5000;
# app.listen(PORT, () => {
#   console.log(`✅ Server running on http://localhost:${PORT}`);
# });








# .env

# EMAIL_USER=saisuryakorada2003@gmail.com 
# EMAIL_PASS=yanqhbwfqyjalybs
# MONGO_URI=mongodb+srv://surya:korada2003@cluster0.tvs6lrd.mongodb.net/school?retryWrites=true&w=majority
# JWT_SECRET=supersecret123



# package.jspn

# {
#   "name": "backend-folder",
#   "version": "1.0.0",
#   "main": "server.js",
#   "scripts": {
#     "test": "echo \"Error: no test specified\" && exit 1",
#     "start": "node server.js",
#     "dev": "nodemon server.js"
#   },
#   "keywords": [],
#   "author": "",
#   "license": "ISC",
#   "description": "",
#   "dependencies": {
#     "bcryptjs": "^3.0.2",
#     "cors": "^2.8.5",
#     "dotenv": "^17.2.0",
#     "express": "^5.1.0",
#     "jsonwebtoken": "^9.0.2",
#     "mongoose": "^8.16.3",
#     "nodemailer": "^7.0.5"
#   },
#   "devDependencies": {
#     "nodemon": "^3.1.10"
#   }
# }


# # ____________________________________________________________________

# frontend

# components/login.js

# import React, { useState, useContext, useEffect } from 'react';
# import axios from 'axios';
# import { AuthContext } from '../context/AuthContext';
# import { useNavigate } from 'react-router-dom';

# function Login() {
#   const [form, setForm] = useState({ email: '', password: '' });
#   const [msg, setMsg] = useState('');
#   const { user, setUser } = useContext(AuthContext);
#   const navigate = useNavigate();

#  useEffect(() => {
#   if (user?.token) {
#     const timeout = setTimeout(() => {
#       navigate('/faculty/add');
#     }, 100); // wait 100ms before navigating

#     return () => clearTimeout(timeout); // cleanup
#   }
# }, [user, navigate]);


#   const handleChange = (e) => {
#     setForm({ ...form, [e.target.name]: e.target.value });
#   };

#   const adminEmail = "admin@gayathri.com";

#   const handleLogin = async (e) => {
#     e.preventDefault();
#     try {
#       const res = await axios.post("http://localhost:5000/api/auth/login", form);

#       if (res.data.email !== adminEmail) {
#         return setMsg("Only admin can login!");
#       }

#       localStorage.setItem("token", res.data.token);
#       localStorage.setItem("username", res.data.username);
#       localStorage.setItem("email", res.data.email);
#       localStorage.setItem("isFacultyAdmin", "true");

#       setUser({
#         username: res.data.username,
#         token: res.data.token,
#         email: res.data.email,
#       });

#       navigate('/faculty/add'); // handled by useEffect now

#     } catch (err) {
#       setMsg(err.response.data.msg);
#     }
#   };

#   return (
#     <section className='login'> 
#     <div className="form-box">
#       <h2>Login</h2>
#       <form onSubmit={handleLogin}>
#         <input type="email" name="email" placeholder="Email" value={form.email} onChange={handleChange} />
#         <input type="password" name="password" placeholder="Password" value={form.password} onChange={handleChange} />
#         <button type="submit">Login</button>
#       </form>
#       {msg && <p>{msg}</p>}
#     </div>
#     </section>
#   );
# }

# export default Login;


# components/addfaculty

# import React, { useState } from 'react';

# const AddFaculty = () => {
#   const [formData, setFormData] = useState({
#     facultyName: '',
#     subjectName: '',
#     // department: '',
#     qualification: '',
#     experience: '',
#     // specialization: ''
#   });

#   const handleChange = (e) => {
#     const { name, value } = e.target;
#     setFormData(prev => ({
#       ...prev,
#       [name]: value
#     }));
#   };

#   const handleSubmit = (e) => {
#     e.preventDefault();

    

#     // get existing list
#     const existing = JSON.parse(localStorage.getItem("facultyList")) || [];

#     // add new faculty
#     const updated = [...existing, formData];

#     // save to localStorage
#     localStorage.setItem("facultyList", JSON.stringify(updated));

#     // reset form
#     setFormData({
#       facultyName: '',
#       subjectName: '',
#       // department: '',
#       qualification: '',
#       experience: '',
#       // specialization: ''
#     });

#     alert("✅ Faculty added successfully!");
#   };

#   return (
#     <div className='add-faculty-page'>
#       <h1>🎓 Faculty Details</h1>
#       <p className="add-faculty-subtext">
#         Enter complete details of new faculty members to showcase on the school website.
#       </p>

#       <form className="add-faculty-form" onSubmit={handleSubmit}>
#         {/* <h2 className="add-faculty-form-title">Faculty Details</h2> */}
#         <input name="facultyName" type="text" placeholder="Faculty's Name" value={formData.facultyName} onChange={handleChange} required />
#         <input name="subjectName" type="text" placeholder="Subject Name" value={formData.subjectName} onChange={handleChange} required />
#         {/* <input name="department" type="text" placeholder="Department" value={formData.department} onChange={handleChange} required /> */}
#         <input name="qualification" type="text" placeholder="Qualification" value={formData.qualification} onChange={handleChange} required />
#         <input name="experience" type="text" placeholder="Experience" value={formData.experience} onChange={handleChange} required />
#         {/* <input name="specialization" type="text" placeholder="Specialization" value={formData.specialization} onChange={handleChange} /> */}

#         <button type="submit">Add Faculty</button>
#       </form>
#     </div>
#   );
# };

# export default AddFaculty;



# components/privateroutes

# import React, { useContext } from 'react'
# import { Navigate } from 'react-router-dom'
# import { AuthContext } from '../context/AuthContext'

# const PrivateRoute = ({ children }) => {
#   const { user, loading } = useContext(AuthContext)

#   if (loading) return <p>Loading...</p>

#   return user?.username === 'admin' ? children : <Navigate to="/login" />
# }

# export default PrivateRoute



# components/dashboard

# import React, { useContext } from 'react';
# import { AuthContext } from '../context/AuthContext';
# import { useNavigate } from 'react-router-dom';

# function Dashboard() {
#   const { user, setUser } = useContext(AuthContext);
#   const navigate = useNavigate();

#   const handleLogout = () => {
#     localStorage.removeItem("token");
#     localStorage.removeItem("username");
#     console.log("user in dashboard:", user);

#     setUser(null);
#     navigate("/login");
#   };

#   return (
#     <div className="form-box">
#       <h2>Welcome {user?.username} 🎉</h2>
#       <p>This is your protected dashboard page</p>
#       <button onClick={handleLogout}>Logout</button>
#     </div>
#   );
# }

# export default Dashboard;



# context/AuthContext

#   import React, { createContext, useState, useEffect } from "react";

#   export const AuthContext = createContext();

#   export const AuthProvider = ({ children }) => {
#     const [user, setUser] = useState(null);
#     const [loading, setLoading] = useState(true); 

#     useEffect(() => {
#       const token = localStorage.getItem("token");
#       const username = localStorage.getItem("username");
#       if (token && username) {
#         setUser({ username, token });
#       }
#       setLoading(false);
#     }, []);

#     return (
#       <AuthContext.Provider value={{ user, setUser, loading }}>
#         {children}
#       </AuthContext.Provider>
#     );
#   };


#   pages:

#   admission

#   import React, { useState , useEffect} from 'react';
# import axios from 'axios';

# function Admission() {
#     const [alertMsg, setAlertMsg] = useState('');
#     const [alertType, setAlertType] = useState(''); // 'success' or 'error'

#   const [form, setForm] = useState({
#     studentName: '',
#     parentName: '',
#     className: '',
#     phone: '',
#     email: '',
#     message: ''
#   });

#   const handleChange = (e) => {
#     setForm({ ...form, [e.target.name]: e.target.value });
#   };

#    useEffect(() => {
#         if (alertMsg) {
#             const timer = setTimeout(() => {
#             setAlertMsg('');
#             setAlertType('');
#             }, 5000); // 3 seconds lo hide avuthundhi

#             return () => clearTimeout(timer); // cleanup
#         }
#         }, [alertMsg]);


# const handleSubmit = async (e) => {
#   e.preventDefault();

#   // 1️⃣ Immediate feedback
#   setAlertMsg("Submitting admission form...");
#   setAlertType("info");

#   try {
#     // 2️⃣ Send data to backend
#    const res =await axios.post('https://gayatri-backend.onrender.com/admission-form', form);







#     // 3️⃣ On success, update message
#     setAlertMsg(res.data.message );
#     setAlertType("success");

#     // 4️⃣ Clear the form
#     setForm({
#       studentName: '',
#       parentName: '',
#       className: '',
#       phone: '',
#       email: '',
#       message: ''
#     });

#   } catch (err) {
#     // 5️⃣ If error occurs    
#     console.log("AXIOS ERROR:", err);
#     setAlertMsg("❌ Something went wrong! Please try again.");
#     setAlertType("error");
#   }
# };



#   return (

#     <div className="admission-page">

#                 {alertMsg && (
#             <div className={
#                 alertType === 'success'
#                 ? 'alert-success'
#                 : alertType === 'error'
#                 ? 'alert-error'
#                 : 'alert-submitting' // for info
#             }>
#                 {alertType === 'info' && <span className="loader"></span>}
#                 {alertMsg}
#             </div>
#             )}


        


#        <h1>🎓 Admissions Open for 2025</h1>
#       <p className="admission-subtext">
#   Unlock your child's full potential at <strong>Sri Gayathri High School</strong> – where academic brilliance meets innovation and care.
#   <br />
#   Join us for the 2025 admissions season and be a part of our growing legacy of excellence.
# </p>


#       <form className="admission-form" onSubmit={handleSubmit}>
#          <h2 className="form-title">🧑‍🎓 Student Admission Form</h2>
#         <input name="studentName" type="text" placeholder="Student's Name" required  value={form.studentName} onChange={handleChange} />
#         <input name="parentName" type="text" placeholder="Parent's Name" required  value={form.parentName} onChange={handleChange} />
#         <input name="className" type="text" placeholder="Class Applying For" required  value={form.className} onChange={handleChange} />
#         <input name="phone" type="tel" placeholder="Parent's Phone Number" required  value={form.phone} onChange={handleChange} />
#         <input name="email" type="email" placeholder="Parent's Email" required  value={form.email} onChange={handleChange} />
#         <textarea name="message" placeholder="Additional Message (optional)" rows="4"  value={form.message} onChange={handleChange}></textarea>
#         <button type="submit">Submit Admission Form</button>
#       </form>

      

#     </div>
#   );
# }

# export default Admission;




# contact

# import React, { useState, useEffect } from 'react';
# import axios from 'axios';
# import Maps from './Maps';

# function Contact() {

#       const [alertMsg, setAlertMsg] = useState('');
#       const [alertType, setAlertType] = useState(''); // 'success' or 'error'
  
#   const [form, setForm] = useState({ name: '', email: '', message: '' });

#   const handleChange = (e) => {
#     setForm({ ...form, [e.target.name]: e.target.value });
#   };

#      useEffect(() => {
#           if (alertMsg) {
#               const timer = setTimeout(() => {
#               setAlertMsg('');
#               setAlertType('');
#               }, 5000); // 3 seconds lo hide avuthundhi
  
#               return () => clearTimeout(timer); // cleanup
#           }
#           }, [alertMsg]);


#   const handleSubmit = async (e) => {
#   e.preventDefault();
#   setAlertMsg("Sending message to Principal...");
#   setAlertType("info");

#   try {
#     const res = await axios.post('https://gayatri-backend.onrender.com/send-message', form);





#      setAlertMsg(res.data.message );
#     setAlertType("success");

#     setForm({name:'', email: '', message: ''});
#   } catch (err) {
#     setAlertMsg("❌ Something went wrong! Please try again.");
#     setAlertType("error");
#   }
# };
# ;
  
#   return (
#     <div className='about'> 
#     <div className="contact-page">

#          {alertMsg && (
#             <div className={
#                 alertType === 'success'
#                 ? 'alert-success'
#                 : alertType === 'error'
#                 ? 'alert-error'
#                 : 'alert-submitting' // for info
#             }>
#                 {alertType === 'info' && <span className="loader"></span>}
#                 {alertMsg}
#             </div>
#             )}


#       <h1>🤝   Reach Out to Us </h1>

#       <div className="contact-container">
#         {/* Contact Details */}
#         <div className="contact-info">
#           {/* <h2>Reach Out</h2> */}
#           <p>📍 D.No: 5-6-89, Main Road, Vijayawada, AP</p>
#           <p>📞 +91 98765 43210</p>
#           <p>📧 schoolgayathri@gmail.com</p>
#           <p>🕒 Mon - Sat: 9 AM - 4 PM</p>
#         </div>

#         {/* Contact Forrm */}
#               <form className="contact-form" onSubmit={handleSubmit}>
#         <h2>Send a Message</h2>

#         <input
#           type="text"
#           name="name"
#           placeholder="Your Name"
#           value={form.name}
#           onChange={handleChange}
#           required
#         />

#         <input
#           type="email"
#           name="email"
#           placeholder="Your Email"
#           value={form.email}
#           onChange={handleChange}
#           required
#         />

#         <textarea
#           name="message"
#           placeholder="Your Message"
#           rows="5"
#           value={form.message}
#           onChange={handleChange}
#           required
#         ></textarea>

#         <button type="submit">Send Message</button>
#       </form>

#             </div>
#           </div>

#           <Maps />
#           </div>
#         );
#       };

# export default Contact;


# faculty.js

# import React, { useEffect, useState } from 'react';
# import { useNavigate } from 'react-router-dom';

# const Faculty = () => {
#   const [facultyList, setFacultyList] = useState([]);
#   const navigate = useNavigate();

#   useEffect(() => {
#     // ✅ Set sample faculty data if not already present
#     const existing = JSON.parse(localStorage.getItem("facultyList"));
#     if (!existing || existing.length === 0) {
#       const sampleFaculty = [
#         {
#           facultyName: "Mr. Rama Krishna",
#           subjectName: "Mathematics",
#           qualification: "M.Sc, B.Ed",
#           experience: "12 Years"
#         },
#         {
#           facultyName: "Ms. Sravani Devi",
#           subjectName: "Science",
#           qualification: "M.Sc, B.Ed",
#           experience: "10 Years"
#         },
#         {
#           facultyName: "Mr. Venkat Rao",
#           subjectName: "English",
#           qualification: "M.A, B.Ed",
#           experience: "9 Years"
#         },
#         {
#           facultyName: "Ms. Anjali Kumari",
#           subjectName: "Computer Science",
#           qualification: "M.Tech",
#           experience: "8 Years"
#         },
#         {
#           facultyName: "Mr. Ajay Varma",
#           subjectName: "Physics",
#           qualification: "M.Sc, B.Ed",
#           experience: "11 Years"
#         }
#       ];
#       localStorage.setItem("facultyList", JSON.stringify(sampleFaculty));
#       setFacultyList(sampleFaculty);
#     } else {
#       setFacultyList(existing);
#     }
#   }, []);

#   const handleAddFacultyClick = () => {
#     // Logout logic
#     localStorage.removeItem("token");
#     localStorage.removeItem("email");
#     localStorage.removeItem("username");
#     localStorage.removeItem("isFacultyAdmin");
#     navigate('/login');
#   };

#   return (
#     <div className="faculty-table-page">
#       <h1 className="faculty-title" onClick={handleAddFacultyClick}>
#         🎓 Meet Our Faculty
#       </h1>
#       <p className="faculty-subtext">
#         Highly qualified, experienced & passionate educators who shape the future.
#       </p>

#       {/* Desktop Table */}
#       <div className="faculty-table-container">
#         <div className="faculty-row faculty-header">
#           <div>S.No</div>
#           <div>Name</div>
#           <div>Subject</div>
#           <div>Qualification</div>
#           <div>Experience</div>
#         </div>
#         {facultyList.map((f, index) => (
#           <div className="faculty-row" key={index}>
#             <div>{index + 1}</div>
#             <div>{f.facultyName}</div>
#             <div>{f.subjectName}</div>
#             <div>{f.qualification}</div>
#             <div>{f.experience}</div>
#           </div>
#         ))}
#       </div>

#       {/* Mobile Cards */}
#       <div className="faculty-cards-mobile">
#         {facultyList.map((f, index) => (
#           <div key={index} className="faculty-card">
#             <p><strong>Name:</strong> {f.facultyName}</p>
#             <p><strong>Subject:</strong> {f.subjectName}</p>
#             <p><strong>Qualification:</strong> {f.qualification}</p>
#             <p><strong>Experience:</strong> {f.experience}</p>
#           </div>
#         ))}
#       </div>
#     </div>
#   );
# };

# export default Faculty;


# faculty2.js

# import React, { useEffect, useState } from 'react';
# import { FaEdit, FaTrash } from 'react-icons/fa';
# import AddFaculty from '../components/AddFaculty';


# const Faculty2 = () => {
#   const [facultyList, setFacultyList] = useState([]);
#   const [editIndex, setEditIndex] = useState(null);
#   const [editedFaculty, setEditedFaculty] = useState({});
#   const [showAddForm, setShowAddForm] = useState(false); // ✅ toggling form

#   useEffect(() => {
#     const storedData = JSON.parse(localStorage.getItem("facultyList")) || [];
#     setFacultyList(storedData);
#   }, []);

#   const handleDelete = (index) => {
#     const updated = [...facultyList];
#     updated.splice(index, 1);
#     setFacultyList(updated);
#     localStorage.setItem("facultyList", JSON.stringify(updated));
#   };

#   const handleEditClick = (index) => {
#     setEditIndex(index);
#     setEditedFaculty({ ...facultyList[index] });
#   };

#   const handleInputChange = (e) => {
#     setEditedFaculty({ ...editedFaculty, [e.target.name]: e.target.value });
#   };

#   const handleSave = () => {
#     const updated = [...facultyList];
#     updated[editIndex] = editedFaculty;
#     setFacultyList(updated);
#     localStorage.setItem("facultyList", JSON.stringify(updated));
#     setEditIndex(null);
#   };

#   // 🔥 toggle function
#   const toggleAddForm = () => {
#     setShowAddForm(!showAddForm);
#   };

#   return (
#     <div className="faculty2-table-page">
#       {/* <h1 className="faculty2-title">🎓 Meet Our Faculty</h1> */}
#       {/* <p className="faculty2-subtext">Highly qualified, experienced & passionate educators who shape the future.</p> */}

#       <div className="faculty2-table-container">
#         <div className="faculty2-row faculty-header">
#           <div style={{fontSize:"13px"}} >Name</div>
#           <div style={{fontSize:"13px"}}>Subject</div>
#           <div style={{fontSize:"13px"}}>Qualification</div>
#           <div style={{fontSize:"13px"}}>Experience</div>
#           <div style={{fontSize:"13px"}}>Actions</div>
#         </div>

#         {facultyList.map((f, index) => (
#           <div className="faculty2-row" key={index}>
#             {editIndex === index ? (
#               <>
#                 <div><input name="facultyName" value={editedFaculty.facultyName} onChange={handleInputChange} /></div>
#                 <div><input name="subjectName" value={editedFaculty.subjectName} onChange={handleInputChange} /></div>
#                 <div><input name="qualification" value={editedFaculty.qualification} onChange={handleInputChange} /></div>
#                 <div><input name="experience" value={editedFaculty.experience} onChange={handleInputChange} /></div>
#                 <div><button onClick={handleSave} className="save-btn">Save</button></div>
#               </>
#             ) : (
#               <>
#                 <div>{f.facultyName}</div>
#                 <div>{f.subjectName}</div>
#                 <div>{f.qualification}</div>
#                 <div>{f.experience}</div>
#                 <div className="action-icons">
#                   <FaEdit className="edit-icon" onClick={() => handleEditClick(index)} />
#                   <FaTrash className="delete-icon" onClick={() => handleDelete(index)} />
#                 </div>
#               </>
#             )}
#           </div>
#         ))}
#       </div>

      

#       {/* ✅ show AddFaculty if toggled */}
#       {showAddForm && <AddFaculty />}
#     </div>
#   );
# };

# export default Faculty2;



# facultypage.js

# import { useEffect } from 'react';
# import { Link, useNavigate } from 'react-router-dom';
# import Faculty2 from './Faculty2';
# import AddFaculty from '../components/AddFaculty';

# const FacultyPage = () => {
#   const navigate = useNavigate();

#  useEffect(() => {
#   const isAdmin = localStorage.getItem("isFacultyAdmin");
  
#   const timeout = setTimeout(() => {
#     if (!isAdmin) {
#       navigate('/login');
#     }
#   }, 0);

#   return () => clearTimeout(timeout);
# }, [navigate]);



#   return (
#     <div className="faculty-page-container">
#       <div className="faculty-left">
#         <AddFaculty />
#       </div>
#       <div className="faculty-right">
#         <Faculty2 />
#       </div>

#       {/* 👇 Back Button Section */}
#       <div className="back-button-container">
#         <Link to="/faculty" className="back-button">
#           ← Back
#         </Link>
#       </div>
#     </div>
#   );
# };

# export default FacultyPage;


# app.js


# import React from 'react'
# import { BrowserRouter, Route, Routes } from 'react-router-dom'
# import Navbar from './components/Navbar'
# import Home from './pages/Home'
# import About from './pages/About'
# import Contact from './pages/Contact'
# import Gallery from './pages/Gallery'
# import Sports from './pages/Sports'
# import Footer from './pages/Footer'
# import Admission from './pages/Admission'
# import Faculty from './pages/Faculty'
# // import AddFaculty from './components/AddFaculty'
# import Login from './components/Login'
# import Dashboard from './components/Dashboard'
# import PrivateRoute from './components/PrivateRoute'
# import { AuthProvider } from './context/AuthContext'
# // import Faculty2 from './pages/Faculty2'
# import FacultyPage from './pages/FacultyPage'

# const App = () => {
#   return (
#     <AuthProvider>
#       <BrowserRouter>
#         <Navbar />
#         <Routes>
#           <Route path='/' element={<Home />} />
#           <Route path='/about' element={<About />} />
#           <Route path='/contact' element={<Contact />} />
#           <Route path='/gallery' element={<Gallery />} />
#           <Route path='/sports' element={<Sports />} />
#           <Route path='/admission' element={<Admission />} />
#           <Route path='/login' element={<Login />} />
#           <Route path='/dashboard' element={<PrivateRoute><Dashboard /></PrivateRoute>} />

#          <Route path='/faculty' element={<Faculty />} />
#          <Route path="/facultyPage" element={<FacultyPage />} />



#           <Route path='/faculty/add' element={
#             <PrivateRoute>
#               <FacultyPage />
#             </PrivateRoute>
#           } />


#         </Routes>
#         <Footer />
#       </BrowserRouter>
#     </AuthProvider>
#   )
# }

# export default App
